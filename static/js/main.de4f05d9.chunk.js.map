{"version":3,"sources":["components/Components.module.css","components/api.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","query","page","apiKey","axios","get","then","res","data","hits","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","src","alt","createPortal","className","s","Overlay","onClick","Component","ImageGalleryItem","state","showModal","toggleModal","setState","id","largeImageURL","ImageGalleryItemImage","data-id","ImageGallery","images","onImageClick","map","image","webformatURL","tags","getLargeImageURL","SearchBar","handleChange","value","handleSubmit","preventDefault","onSubmit","Searchbar","SearchForm","type","SearchFormButton","SearchFormButtonLabel","onChange","SearchFormInput","autoComplete","autoFocus","placeholder","Button","scroll","scrollTo","top","documentElement","scrollHeight","behavior","buttonDiv","App","isLoading","error","fetchImages","api","prevState","catch","finally","onChangeQuery","prevProps","color","height","width","timeout","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de4f05d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Components_App__1i73I\",\"Searchbar\":\"Components_Searchbar__3wwfW\",\"SearchForm\":\"Components_SearchForm__2n-IZ\",\"SearchFormButton\":\"Components_SearchFormButton__2YiBK\",\"SearchFormButtonLabel\":\"Components_SearchFormButtonLabel__i1Tmu\",\"SearchFormInput\":\"Components_SearchFormInput__ekd1G\",\"ImageGallery\":\"Components_ImageGallery__3v_Om\",\"ImageGalleryItem\":\"Components_ImageGalleryItem__1448F\",\"ImageGalleryItemImage\":\"Components_ImageGalleryItemImage__2Ims1\",\"Overlay\":\"Components_Overlay__12oCI\",\"Modal\":\"Components_Modal__uzopx\",\"buttonDiv\":\"Components_buttonDiv__2Afvu\",\"Button\":\"Components_Button__RNHJR\"};","import axios from 'axios';\n\nconst fetchImg = (query = '', page = 1) => {\n  const apiKey = '19054641-bf36a8a09cd65ed4eb613a5e0';\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12\n`,\n    )\n    .then(res => res.data.hits);\n};\n\nexport default { fetchImg };\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from '../Components.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Components.module.css';\nimport Modal from '../Modal/Modal';\n\nclass ImageGalleryItem extends Component {\n  state = {\n    showModal: false,\n  };\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  };\n\n  toggleModal = () => {\n    this.setState(state => ({\n      showModal: !state.showModal,\n    }));\n  };\n\n  render() {\n    const { src, alt, id, largeImageURL } = this.props;\n    const { showModal } = this.state;\n\n    return (\n      <li className={s.ImageGalleryItem}>\n        <img\n          onClick={this.toggleModal}\n          className={s.ImageGalleryItemImage}\n          src={src}\n          alt={alt}\n          data-id={id}\n        />\n        {showModal && (\n          <Modal onClose={this.toggleModal} src={largeImageURL} alt={alt} />\n        )}\n      </li>\n    );\n  }\n}\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport s from '../Components.module.css';\n\nfunction ImageGallery({ images, onImageClick }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          src={image.webformatURL}\n          largeImageURL={image.largeImageURL}\n          id={image.id}\n          alt={image.tags}\n          getLargeImageURL={onImageClick}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport s from '../Components.module.css';\n\nclass SearchBar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = e => {\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form onSubmit={this.handleSubmit} className={s.SearchForm}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n          <input\n            type=\"text\"\n            value={this.state.query}\n            onChange={this.handleChange}\n            className={s.SearchFormInput}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Components.module.css';\n\nclass Button extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  scroll = () => {\n    this.props.onClick();\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  render() {\n    return (\n      <div className={s.buttonDiv}>\n        <button type=\"button\" onClick={this.scroll} className={s.Button}>\n          Load more\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport api from './components/api';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport SearchBar from './components/Searchbar/Searchbar';\nimport Button from './components/Button/Button';\nimport Loader from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    isLoading: false,\n    query: '',\n    page: 1,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.fetchImages();\n    }\n  }\n\n  fetchImages = () => {\n    const { query, page } = this.state;\n\n    this.setState({ isLoading: true });\n\n    api\n      .fetchImg(query, page)\n      .then(images =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  onChangeQuery = query => {\n    this.setState({ query: query, page: 1, images: [] });\n  };\n\n  render() {\n    const { images, isLoading } = this.state;\n\n    return (\n      <>\n        <div>\n          <SearchBar onSubmit={this.onChangeQuery} />\n          <ImageGallery images={images} />\n\n          <span className=\"loader\">\n            {isLoading && (\n              <Loader\n                type=\"TailSpin\"\n                color=\"#00BFFF\"\n                height={80}\n                width={80}\n                timeout={3000} //3 secs\n              />\n            )}\n          </span>\n          {images.length > 0 && !isLoading && (\n            <Button onClick={this.fetchImages} />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}